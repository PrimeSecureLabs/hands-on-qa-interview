version: '3.8'

services:
  svc-central:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${PORT:-3000}:3000'
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3000}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - PAYMENT_GATEWAY_URL=${PAYMENT_GATEWAY_URL}
      - PAYMENT_GATEWAY_API_KEY=${PAYMENT_GATEWAY_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    # Uncomment when using Docker secrets in production
    # secrets:
    #   - db_password
    #   - jwt_secret
    #   - stripe_secret_key
    #   - stripe_webhook_secret
    #   - payment_gateway_api_key
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${DB_NAME:-central_svc}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d/
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-postgres}']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
# Uncomment when using Docker secrets in production
# secrets:
#   db_password:
#     external: true
#   jwt_secret:
#     external: true
#   stripe_secret_key:
#     external: true
#   stripe_webhook_secret:
#     external: true
#   payment_gateway_api_key:
#     external: true
